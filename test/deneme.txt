#include <vs1053_ext.h>
#include <vs1053b-patches-flac.h>
#include "Arduino.h"
#include "SPI.h"
#include "FS.h"
#include <WiFi.h>
#include <Adafruit_GFX.h>
#include <Wire.h>
#include <LiquidCrystal_I2C.h>


String ssid = "ASUS";
String password = "uTF52pvs";


#define SD_CS 5
#define VS1053_MOSI 23
#define VS1053_MISO 19
#define VS1053_SCK 18
#define VS1053_CS 32
#define VS1053_DCS 33
#define VS1053_DREQ 35
#define NEXTBTN 34
#define RADIOBTN 25




bool radioMuKartMi = false;




byte customCharSong[] = {
 B00010,
 B00011,
 B00010,
 B00010,
 B01110,
 B10010,
 B10010,
 B01100
};


byte customCharPlay[] = {
 B00000,
 B10000,
 B11000,
 B11100,
 B11110,
 B11100,
 B11000,
 B10000
};


//Adafruit_PCD8544 display = Adafruit_PCD8544(22, 27, 4, 15, 2);
VS1053 mp3(VS1053_CS, VS1053_DCS, VS1053_DREQ, VSPI, VS1053_MOSI, VS1053_MISO, VS1053_SCK);
int volume = 15;


bool isPlaying = false;
bool intRadioDurum = true;


unsigned long gecenZaman = 0;
unsigned long baslangicZaman = 0;
unsigned long sarkiBaslamaZaman = 0;
LiquidCrystal_I2C display(0x27, 16, 2);


//String url = "http://37.247.98.8/stream/166/"; //https://turkmedya.radyotvonline.net/alemfmaac
String url = "http://powerturkakustik.listenpowerapp.com/powerturkakustik/mpeg/icecast.audio";
//String url = "http://37.247.98.8/stream/166/";
//String url = "http://powerturkakustik.listenpowerapp.com/powerturkakustik/mpeg/icecast.audio";


void setup() {
 display.createChar(0, customCharSong);
 display.createChar(1, customCharPlay);
 Serial.begin(115200);
 display.begin();
 display.backlight();
 display.print("Hello world!");
 pinMode(NEXTBTN, INPUT);
 pinMode(RADIOBTN, INPUT);
 WiFi.disconnect();
 WiFi.mode(WIFI_STA);
 WiFi.begin(ssid.c_str(), password.c_str());
 while (WiFi.status() != WL_CONNECTED) delay(1500);

/*
 SPI.begin(14, 27, 13);
 if (!SD.begin(SD_CS)) {
   Serial.println("SD Card initialization failed!");
   kayanMesajGoster(1, "Sd Card Hatasi");
   while (true)
     ;
 }*/


 delay(1000);
 mp3.begin();
 mp3.setVolume(volume);
 mp3.connecttohost(url);
 //kayanMesajGoster(1, url);
 display.clear();
 display.setCursor(0, 0);
 display.print("Internet Radio");
 display.setCursor(0, 1);
 String metin = url;  // Yazdırılacak metin
 int uzunluk = metin.length();
 if (uzunluk > 16) {
   metin = metin.substring(0, 14);
 }
 display.print(metin);
 delay(1000);
 //display.clear();
}


void kayanMesajGoster(int satir, String mesaj) {
 for (int e = mesaj.length(); e >= 0; e--) {
   display.clear();
   display.setCursor(e, satir);
   display.print(mesaj);
   delay(500);
   display.clear();
 }
}


void loop() {
 /*if (digitalRead(RADIOBTN) == 1) {
   if (!radioMuKartMi) sarkiBaslamaZaman = millis();
   radioMuKartMi = !radioMuKartMi;
   intRadioDurum = !intRadioDurum;
   Serial.print("radioMuKartMi");
   Serial.println(radioMuKartMi);


   delay(2000);
 } else if (!radioMuKartMi && !intRadioDurum) {
   delay(1000);
   mp3.begin();
   mp3.setVolume(volume);
   mp3.connecttohost(url);
   //kayanMesajGoster(1, url);
   display.clear();
   display.setCursor(0, 0);
   display.print("Internet Radio");
   display.setCursor(0, 1);
   String metin = url;  // Yazdırılacak metin
   int uzunluk = metin.length();
   if (uzunluk > 16) {
     metin = metin.substring(0, 14);
   }
   display.print(metin);
   delay(1000);
   intRadioDurum = !intRadioDurum;
 }
 */
 if (true) mp3.loop();
 /*File root = SD.open("/");
 if (!root) {
   Serial.println("Failed to open directory");
   return;
 }
 if (digitalRead(NEXTBTN) == HIGH) {


   if (!radioMuKartMi) {
     url = url1;
     mp3.connecttohost(url);
     display.clear();
     display.setCursor(0, 0);
     display.print("Internet Radio");
     display.setCursor(0, 1);
     String metin = url;  // Yazdırılacak metin
     int uzunluk = metin.length();
     if (uzunluk > 16) {
       metin = metin.substring(0, 14);
     }
     display.print(metin);
     delay(1000);
     Serial.print("diger int radyo");
   }
 }
 while (radioMuKartMi) {
   File entry = root.openNextFile();
   if (!entry) {
     // No more files
     break;
   }
   if (entry.isDirectory()) {
     entry.close();
     continue;
   }
   if (entry.name()[0] != '/') {
     playMP3(entry);
   }
   entry.close();
 }
*/
}


void playMP3(File mp3File) {
 // File name
 char fileName[32];
 strncpy(fileName, mp3File.name(), sizeof(fileName));
 // MP3 playback setup
 mp3.connecttoFS(SD, fileName);
 Serial.println(fileName);
 mp3.loop();


 // Playback loop
 while (mp3.isRunning()) {
   mp3.loop();


   //kayanMesajGoster(0, fileName);


   //previousMillis-startTime
   unsigned long suankiZaman = millis();
   unsigned long playZaman = (suankiZaman - baslangicZaman) / 1000;


   if (suankiZaman - baslangicZaman >= 1000) {


     unsigned long playGecenZaman = (suankiZaman - sarkiBaslamaZaman) / 1000;
     unsigned int minutes = playGecenZaman / 60;
     unsigned int seconds = playGecenZaman % 60;
     display.clear();
     display.setCursor(0, 0);
     display.write(byte(0));
     display.setCursor(2, 0);
     String metin = fileName;  // Yazdırılacak metin
     int uzunluk = metin.length();
     if (uzunluk > 16) {
       metin = metin.substring(0, 12);
     }
     display.print(metin);
     display.setCursor(0, 1);
     display.write(byte(1));
     display.setCursor(2, 1);
     display.print("     ");  // Önceki değeri temizle
     display.print((minutes < 10 ? "0" : ""));
     display.print(minutes);
     display.print(":");
     display.print((seconds < 10 ? "0" : ""));
     display.print(seconds);
     /*Serial.print(minutes);
     Serial.print(":");
     Serial.println(seconds);*/
     baslangicZaman = suankiZaman;  // Zamanı güncelle
   }
   if (!mp3.isRunning()) {
     isPlaying = false;
     delay(1000);  // Wait for a second before continuing to the next song
     sarkiBaslamaZaman = millis();


     Serial.println("sarki bitti");
     break;
   }
   if (digitalRead(NEXTBTN) == HIGH) {
     delay(1000);  // Wait for a second before continuing to the next song
     sarkiBaslamaZaman = millis();
     Serial.println("sonraki sarki");
     break;
   }
   if (digitalRead(RADIOBTN) == 1) {
     radioMuKartMi = !radioMuKartMi;
     Serial.print("radioMuKartMi");
     Serial.println(radioMuKartMi);
     delay(2000);
     break;
   }
 }
}
